<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Oracle数据库应用]]></title>
    <url>%2F2018%2F11%2F01%2FOracle%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BA%94%E7%94%A8%2F</url>
    <content type="text"><![CDATA[表空间（用来存放各种应用文件）一般分为三种123$ 永久性表空间：一般保存表，过程，索引等数据$ 临时性表空间：只用于保存系统中短期活动的数据，如排序数据$ 撤销表空间：用来帮助回退为=未提交的事务数据 那么为什么要创建表空间呢？对不同用户分配不同的表空间，方便管理有利于管理磁盘空间，提高i/o性能 ##一些基本的授权 1234567891011创建用户没有授权【创建表】create table student(stu_id number(2),stu_name varchar2(10));create table student(stu_id number(2),stu_name varchar2(10))*第 1 行出现错误:ORA-01031: 权限不足 //使用system用户授权grant connect,resource to martin; //授权用户connect,resource 权限grant select on scott.emp to martin; //允许用户查看emp表中记录grant update on scott.emp to martin; //允许用户修改emp表中记录 ##同义词（公有和私有 //私有只能被当前模式用户访问）简化sql语句隐藏对象名称和所有者为分布式数据库的远程对象提供了位置透明性提供对象的公共访问123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210//给用户martin授权同义词grant create synonym to martin; //创建私有同义词SQL&gt; create synonym sy_emp for system.employee; 同义词已创建。 SQL&gt; select *from sy_emp; //创建共有同义词（在物主用户上创建）SQL&gt; create public synonym public_sy_emp for employee; 同义词已创建。 SQL&gt; //删除私有同义词SQL&gt; drop synonym martin.sy_emp; 同义词已删除。 SQL&gt; //删除共有同义词SQL&gt; drop public synonym public_sy_emp; 同义词已删除。SQL&gt;``` ##创建序列和就是生成主键要用的，感觉不好用``` bashSQL&gt; create sequence seq1 2 start with 10 3 increment by 1 4 maxvalue 2000 5 nocycle 6 cache 30; 序列已创建。 SQL&gt; create table toys(toyid number(2), toyname varchar2(10),toyprice number(4,2)); 表已创建。 SQL&gt; insert into toys(toyid,toyname,toyprice)values(seql.nextval,'杰尼龟',25);insert into toys(toyid,toyname,toyprice)values(seql.nextval,'杰尼龟',25) *第 1 行出现错误:ORA-02289: 序列不存在 SQL&gt; insert into toys(toyid,toyname,toyprice)values(seq1.nextval,'杰尼龟',25); 已创建 1 行。 SQL&gt; insert into toys(toyid,toyname,toyprice)values(seq1.nextval,'憨八龟',35); 已创建 1 行。 SQL&gt; select * from toys; TOYID TOYNAME TOYPRICE---------- -------------------- ---------- 11 杰尼龟 25 12 憨八龟 35 SQL&gt; create table tots(totid number(2), totname varchar2(10),totprice number(4,2)); 表已创建。 SQL&gt; insert into tots(totid,totname,totprice)values(seq1.nextval,'小火龙',40); 已创建 1 行。 SQL&gt; insert into tots(totid,totname,totprice)values(seq1.nextval,'毒龙钻',80); 已创建 1 行。 SQL&gt; select * from tots; TOTID TOTNAME TOTPRICE---------- -------------------- ---------- 14 小火龙 40 15 毒龙钻 80``` ##索引###反向键索引目的：比如索引值是一个自动增长的列多个用户对集中在少数块上的索引行进行修改，容易引起资源的争用，比如对数据块的等待。此时建立反向索 引。语法：CREATE INDEX index_REVERSE_EMPNO ON table (column) REVERSE;###位图索引1、 何时创建：列中有非常多的重复的值时候。例如某列保存了 “性别”信息。Where 条件中包含了很多OR操作符。较少的update操作，因为要相应的跟新所有的bitmap2、 结构：位图索引使用位图作为键值，对于表中的每一数据行位图包含了TRUE(1)、FALSE(0)、或NULL值。3、 优点：位图以一种压缩格式存放，因此占用的磁盘空间比标准索引要小得多4、 语法：CREATE BITMAP INDEX index ON table (column[, column]...);###唯一索引1、 何时创建：当某列任意两行的值都不相同2、 当建立Primary Key(主键)或者Unique constraint(唯一约束)时，唯一索引将被自动建立3、 语法：CREATE UNIQUE INDEX index ON table (column);##熟练并背诵数据库建立索引的原则1，确定针对该表的操作是大量的查询操作还是大量的增删改操作。 2，尝试建立索引来帮助特定的查询。检查自己的sql语句，为那些频繁在where子句中出现的字段建立索引。 3，尝试建立复合索引来进一步提高系统性能。修改复合索引将消耗更长时间，同时，复合索引也占磁盘空间。 4，对于小型的表，建立索引可能会影响性能 5，应该避免对具有较少值的字段进行索引。 6，避免选择大型数据类型的列作为索引。 索引建立的原则 索引查询是数据库中重要的记录查询方法，要不要进入索引以及在那些字段上建立索引都要和实际数据库系统的查询要求结合来考虑，下面给出实际中的一些通用的原则： 1. 在经常用作过滤器的字段上建立索引； 2. 在SQL语句中经常进行GROUP BY、ORDER BY的字段上建立索引； 3. 在不同值较少的字段上不必要建立索引，如性别字段； 4. 对于经常存取的列避免建立索引； 5. 用于联接的列（主健/外健）上建立索引； 6. 在经常存取的多个列上建立复合索引，但要注意复合索引的建立顺序要按照使用的频度来确定； 7. 缺省情况下建立的是非簇集索引，但在以下情况下最好考虑簇集索引，如：含有有限数目（不是很少）唯一的列；进行大范围的查询；充分的利用索引可以减少表扫描I/0的次数，有效的避免对整表的搜索。当然合理的索引要建立在对各种查询的分析和预测中，也取决于DBA的所设计的数据库结构。##范围分区（超好用，就是麻烦）``` bash 范围分区（数字类型）create table graderecord ( sno varchar2(10), sname varchar2(20), dormitory varchar2(3), grade int ) partition by range(grade) ( partition bujige values less than(60), --不及格 partition jige values less than(85), --及格 partition youxiu values less than(maxvalue) --优秀 ) 范围分区（日期类型）create table sales( sales_id number, product_id varchar2(5), sales_date date not null, sales_cost number(10), areacode varchar2(10))partition by range(sales_date)( partition p1 values less than(to_date('2013-04-1','yyyy-mm-dd')), partition p2 values less than(to_date('2013-07-1','yyyy-mm-dd')), partition p3 values less than(to_date('2013-10-1','yyyy-mm-dd')), partition p4 values less than(to_date('2014-01-1','yyyy-mm-dd')), partition p5 values less than(maxvalue));insert into sales values(1,'22',to_date('2013-04-1','yyyy-mm-dd'),92,'美国');insert into sales values(2,'22',to_date('2013-05-1','yyyy-mm-dd'),92,'韩国'); insert into sales values(3,'23',to_date('2013-08-1','yyyy-mm-dd'),92,'中国'); insert into sales values(4,'24',to_date('2013-11-1','yyyy-mm-dd'),92,'日本'); insert into sales values(5,'25',to_date('2013-09-1','yyyy-mm-dd'),92,'俄罗斯'); ``` ###查询分区情况``` bash--查询分区情况SELECT table_name,partition_name,tablespace_name FROM user_tab_partitions WHERE table_name=UPPER('sales_interval1');``` ##间隔分区表，会自动创建分区``` bash===========================================================| 间隔分区表============================================================*/CREATE TABLE sales_interval1(sales_id NUMBER NOT NULL, product_id VARCHAR2(5), sales_date DATE, sales_cost NUMBER(10), areacode VARCHAR2(5))PARTITION BY RANGE(sales_date)INTERVAL(NUMTOYMINTERVAL(1,'YEAR'))(PARTITION part1 VALUES LESS THAN (to_date('2011/01/01','yyyy/mm/dd'))) ##使用分区查找信息 查看分区并查询信息 SQL&gt; select table_name,partition_name from user_tab_partitions where table_name=upper('sales2'); TABLE_NAME ------------------------------------------------------------ PARTITION_NAME ------------------------------------------------------------ SALES2 P1 SALES2 SYS_P24 SQL&gt; select * from sales2 partition(sys_p24); SALES_ID PRODUCT_ID SALES_DATE SALES_COST AREACODE ---------- ---------- -------------- ---------- -------------------- 4 24 01-11月-13 92 日本 5 25 01-9月 -13 92 俄罗斯 SQL&gt; select * from sales2 partition(p1); SALES_ID PRODUCT_ID SALES_DATE SALES_COST AREACODE ---------- ---------- -------------- ---------- -------------------- 1 22 01-4月 -13 92 美国 2 22 01-5月 -13 92 韩国 3 23 01-8月 -13 92 中国 SQL&gt; 今天我是听着Ragga Bomb -Skrillex完成的]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Oracle数据库基础]]></title>
    <url>%2F2018%2F11%2F01%2FOracle%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[Oracle简介1$ 众所周知，Oracle是个数据库，是Oracle公司的核心产品，优越的数据安全性和完整性，以及跨操作系统，跨硬件平台，主要特点：支持多用户，大事务的事务处理，在保持数据安全性和完整性方面性能优越，支持分布式事务处理，具有可移植性 Oracle基本概念$ 数据库：这不是我们平时所说的数据库，它是磁盘上存储数据的集合 $ 全局数据库名：用于区分一个数据库的标识，要唯一 $ 数据库实例：每个启动的数据库都对应一个数据库实例，有这个实例来访问数据库中的数据 $ 表空间：数据库若干个表空间组成，... $ 数据文件：数据文件扩展名.dbf 是来存储数据库数据的文件 $ 控制文件：控制文件扩展名.ctl 一个二进制文件,根据控制文件查找数据文件 $ 日志文件：日志文件扩展名.log,记录数据更改信息 Oracle重要的三个服务（建议全部设为手动，玩游戏的时候会卡的）$ OracleServiceSID：Oracle数据库服务，对应名为SID（系统标识符）我的是orcl $ OracleOraDb11g_home1TNSListener：监听器服务，如果要远程链接数据库服务器，就必须启动它 $ OracleDBConsoleSID：嗯，这个是控制台服务 SID（系统标识符） 连接Oracle数据库$ SQL*PLUS：system/orcl@orclDB //system是当前用户，orcl为密码，orclDB为使用的网络服务名 $ PL/SQL Developer：直接输入登录ok了 Oracle数据类型（列举几个比较难理解的）$ NUMBER(P,S)：p是精度，标识数字的有效位数，不包括小数点后，s标识小数点右边的位数，是四舍五入的哦 $ Date：SYSDATE标识返回当前的日期和时间，SYSTIMESTAMP返回当前的日期和时间和时区（精确到毫秒）可怕 $ LOB数据类型（大对象）：CLOB(字符clob，存储大量文字),BLOB(二进制lob，存储视频，图片这类)，BFILE(二进制文件，存储二进制文件)，NCLOB(存储大的nchar数据) Oracle中的伪列就像是一个表列，但是它并没有存储到表中，可以查询伪列，但是不能增删改 $ ROWID：每行都有一个行地址，ROWID就是返回该行地址 $ ROWNUM：返回一个数值代表行的次序，可以限制返回的行数（ROWNUM=1可以查到数据，ROWNUM=2就查不到，ROWNUM&gt;N也差不到，ROWNUM&lt;11查询10条记录） 查询数据不重复显示(DISTINCT)SELECT DISTINCT stuNmae from student 集合操作符UNION：返回连个查询选定的所有不重复行UNION ALL：符合两个查询锁定的所有行，包括重复的行INTERSECT：只返回两个查询都有的行MINUS：只返回第一个选定而未被第二个选定的行 连接操作符（||）将两个或多个字符串合并为一个字符串 SQL函数常用的转换函数 $ TO_CHAR 转字符串 （TO_CHAR(SYSDATE，‘YYYY 年fmMM月fmDD日 HH24:MI:SS’)） $ TO_DATE 转日期类型 $ TO_NUMBER 转数值类型 其他函数 $ NVL(EXP1,EXP2)：如果EXP1的值为null，返回EXP2,否则返回EXP1 $ NVL2(EXP1,EXP2,EXP3)：如果EXP1为null，返回EXP3,否则返回EXP2 $ DECODE(VALUE,IF1,THEN1,IF2,THEN2,ELSE)：VALUE值为IF1,则进入THEN1.. 分析函数马上11点了.. 我先走了，自行百度 今天我是听着THE NIGHT – Avicii完成的]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[试问老天，不抵抗是罪吗？]]></title>
    <url>%2F2018%2F11%2F01%2F%E8%AF%95%E9%97%AE%E8%80%81%E5%A4%A9%EF%BC%8C%E4%B8%8D%E6%8A%B5%E6%8A%97%E6%98%AF%E7%BD%AA%E5%90%97%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[OK Start任由其他人攀爬丝也会断,那么 “试问老天,不抵抗是罪吗?”太宰治 《人间失格》` bash「释迦牟尼看到在地狱挣扎的大盗，他干尽了恶事，但他唯一做的好事就是放过了一只蜘蛛，佛祖考虑救他一命，就取下一缕蛛丝朝着地狱垂了下去大盗无意间看到了这根蜘蛛丝，他顺着爬了上去，却发现后面罪人们跟着一起，自私的叫他们滚开，结果蛛丝断了，他们又回到血色的地狱」]]></content>
      <tags>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[现在是星期三22:10分]]></title>
    <url>%2F2018%2F10%2F31%2F%E7%8E%B0%E5%9C%A8%E6%98%AF%E6%98%9F%E6%9C%9F%E4%B8%8922-10%E5%88%86%2F</url>
    <content type="text"><![CDATA[OK Start今天也是幸福的一天，晚上吃了两个烤馍，一根烤面筋，一根烤肠1$ 还有一件事，评论发送邮件功能开启]]></content>
      <tags>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[新的一天]]></title>
    <url>%2F2018%2F10%2F30%2F%E6%96%B0%E7%9A%84%E4%B8%80%E5%A4%A9%2F</url>
    <content type="text"></content>
      <tags>
        <tag>分享</tag>
        <tag>导航</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F10%2F30%2Fhello-world%2F</url>
    <content type="text"><![CDATA[在一个突如其来的下午，一个可怕的想法在我的脑中出现 ###它诞生了…]]></content>
  </entry>
</search>
